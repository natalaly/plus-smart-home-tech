spring:
  application:
    name: analyzer
  datasource:
    driverClassName: "org.postgresql.Driver"
    url: "jdbc:postgresql://localhost:5433/analyzer"  #5432
    username: "analyzer"
    password: "analyzer"
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
        format_sql: true
  sql:
    init:
      mode: always

analyzer:
  kafka:
    consumers:
      snapshot:
        bootstrap-servers: localhost:9092
        group-id: telemetry.analyzer.snapshot
        auto-offset-reset: earliest
        enable-auto-commit: false
        consume-attempt-timeout-ms: 1000
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: ru.yandex.practicum.kafka.deserializer.SensorsSnapshotDeserializer
      hubs:
        bootstrap-servers: localhost:9092
        group-id: telemetry.analyzer.hub
        auto-offset-reset: earliest
        enable-auto-commit: false
        consume-attempt-timeout-ms: 1000
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: ru.yandex.practicum.kafka.deserializer.HubEventDeserializer
    topics:
      snapshots:
        - telemetry.snapshots.v1
      hubs:
        - telemetry.hubs.v1
  grpc:
    client:
      hub-router:
        address: 'static://localhost:59090'
        enableKeepAlive: true
        keepAliveWithoutCalls: true
        negotiationType: plaintext

logging:
  level:
    ru.yandex.practicum: DEBUG
#    root: INFO
#    org.hibernate.SQL: DEBUG
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE


#TODO
